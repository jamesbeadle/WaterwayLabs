var g=Object.defineProperty;var p=(a,e,t)=>e in a?g(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t;var s=(a,e,t)=>p(a,typeof e!="symbol"?e+"":e,t);import{i as l}from"./xvoFZ0Dm.js";import{A as S,a as o,r as m}from"./CCYKMcsg.js";import{P as f,p as n}from"./CQ-yv1hc.js";import{w as b}from"./CjHrAA-f.js";import"./CLaUggeZ.js";import"./C5tH4-mR.js";var w={BACKEND_CANISTER_ID:"rbqtt-7yaaa-aaaal-qcndq-cai"};class _{constructor(){s(this,"actor");this.actor=S.createActor(l,w.BACKEND_CANISTER_ID)}async getDataHashes(){const e=await this.actor.getDataHashes({});if(o(e))throw new Error("Failed to fetch data hashes");return e.ok}}var u={BACKEND_CANISTER_ID:"rbqtt-7yaaa-aaaal-qcndq-cai"};class y{constructor(){s(this,"actor");this.actor=S.createActor(l,u.BACKEND_CANISTER_ID)}async getTeamMembers(){const e=await this.actor.getTeamMembers();if(o(e))throw new Error("Failed to fetch team members");return e.ok}}function v(){const{subscribe:a,set:e}=b([]);return{subscribe:a,setTeamMembers:t=>e(t)}}const h=v();class j{constructor(){s(this,"dataHashService");s(this,"projectService");s(this,"teamService");s(this,"categories",["projects","team_members"]);this.dataHashService=new _,this.projectService=new f,this.teamService=new y}async syncStores(){const e=await this.dataHashService.getDataHashes();if(!e)return;let t=e.dataHashes;if(o(t)){console.error("Error fetching data hashes.");return}e.dataHashes;for(const r of this.categories){const i=t.find(d=>d.category===r);i?.hash!==localStorage.getItem(`${r}_hash`)?(await this.syncCategory(r),localStorage.setItem(`${r}_hash`,i?.hash||"")):this.loadFromCache(r)}}async syncCategory(e){switch(e){case"projects":const t=await this.projectService.getProjects();t&&(n.setProjects(t.projects),localStorage.setItem("projects",JSON.stringify(t,m)));break;case"team_members":const c=await this.teamService.getTeamMembers();h.setTeamMembers(c),localStorage.setItem("team_members",JSON.stringify(c,m));break}}loadFromCache(e){const t=localStorage.getItem(e);switch(e){case"projects":const c=JSON.parse(t||"[]");n.setProjects(c);break;case"team_members":const r=JSON.parse(t||"[]");h.setTeamMembers(r);break}}}const N=new j;export{N as s,h as t};
