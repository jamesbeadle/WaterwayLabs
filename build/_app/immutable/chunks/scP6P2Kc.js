var l=Object.defineProperty;var g=(o,t,r)=>t in o?l(o,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):o[t]=r;var i=(o,t,r)=>g(o,typeof t!="symbol"?t+"":t,r);import{w as C}from"./n_ym-twi.js";import{a as A}from"./CeQShbIZ.js";import{A as p,a}from"./BnLb_NBT.js";import{i as h}from"./BjfHbH4H.js";var u={BACKEND_CANISTER_ID:"rbqtt-7yaaa-aaaal-qcndq-cai"};class s{constructor(){i(this,"actor");this.actor=p.createActor(h,u.BACKEND_CANISTER_ID)}async getProjects(){const t=await this.actor.getProjects({});if(a(t))throw new Error("Failed to fetch projects");return t.ok}async getProjectCanisters(t){const r=await this.actor.getProjectCanisters(t);if(a(r))throw new Error("Failed to fetch project canisters");return r.ok}async getCanisterInfo(t){const r=await this.actor.getCanisterInfo(t);if(a(r))throw new Error("Failed to fetch project canister info");return r.ok}async getApplicationLogs(t){const r=await this.actor.getApplicationLogs(t);if(a(r))throw new Error("Failed to fetch application logs");return r.ok}async topupCanister(t,r){const n=await(await p.createIdentityActor(A,u.BACKEND_CANISTER_ID)).topupCanister(t,r);if(a(n))throw new Error("Failed to topup canister");return n.ok}}function y(){const{subscribe:o,set:t}=C([]);async function r(e){return new s().getProjectCanisters(e)}async function c(e){return new s().getCanisterInfo(e)}async function n(e){return new s().getApplicationLogs(e)}async function f(e,w){return new s().topupCanister(e,w)}return{subscribe:o,setProjects:e=>t(e),getProjectCanisters:r,getCanisterInfo:c,topupCanister:f,getApplicationLogs:n}}const _=y();export{s as P,_ as p};
